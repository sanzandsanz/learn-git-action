name: Work with Cache Dependencies
on:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/workflows/**"
  workflow_dispatch: # Allow manual triggering of the workflow
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test || echo "No tests defined"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: ~/.npm # Cache npm dependencies
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }} # Use package-lock.json to create a unique cache key. When the nuget package is uploaded, the has key will update so you will get the latest one from cache

      - name: Install Dependencies # npm ci will install dependencies from package-lock.json
        run: npm ci

      - name: Run Tests # Assuming you have a test script defined in package.json
        run: echo "Running tests..."
